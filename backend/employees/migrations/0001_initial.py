# Generated by Django 5.2.5 on 2025-08-30 12:51

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('departments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_status', models.CharField(choices=[('application_received', 'Application Received'), ('interview_scheduled', 'Interview Scheduled'), ('hired', 'Hired'), ('not_accepted', 'Not Accepted')], default='application_received', help_text='Current status in the onboarding workflow', max_length=25)),
                ('name', models.CharField(help_text='Employee full name', max_length=200)),
                ('email', models.EmailField(help_text='Employee email address', max_length=254, validators=[django.core.validators.EmailValidator()])),
                ('mobile_number', models.CharField(help_text='Employee mobile number', max_length=15, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: +999999999. Up to 15 digits allowed.', regex='^\\+?1?\\d{9,15}$')])),
                ('address', models.TextField(help_text='Employee address')),
                ('designation', models.CharField(help_text='Employee position/title', max_length=200)),
                ('hired_on', models.DateField(blank=True, help_text='Date when employee was hired (only if hired)', null=True)),
                ('days_employed', models.PositiveIntegerField(blank=True, help_text='Automatically calculated days employed (only if hired)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(help_text='Company this employee belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='companies.company')),
                ('department', models.ForeignKey(help_text='Department this employee belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='departments.department')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['company', 'department', 'name'],
            },
        ),
    ]
